// <auto-generated />
using System;
using DocumentMono.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace DocumentMono.DataAccess.Migrations
{
    [DbContext(typeof(DocumentDbContext))]
    partial class DocumentDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 64)
                .HasAnnotation("ProductVersion", "5.0.14");

            modelBuilder.Entity("DocumentMono.DataAccess.Citizen", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("IdentityNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Citizens");

                    b
                        .HasAnnotation("MySQL:Collation", "latin5_turkish_ci");
                });

            modelBuilder.Entity("DocumentMono.DataAccess.CivilServant", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("ManagerID")
                        .HasColumnType("int");

                    b.Property<string>("Position")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ServantLastName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("ServantName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int?>("UserID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("UserID");

                    b.ToTable("CivilServants");

                    b
                        .HasAnnotation("MySQL:Collation", "latin5_turkish_ci");
                });

            modelBuilder.Entity("DocumentMono.DataAccess.Document", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<int>("CitizenID")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime");

                    b.Property<string>("FileContent")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FileName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<bool>("IsApproved")
                        .HasColumnType("tinyint(1)");

                    b.Property<DateTime?>("LastUpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("ID");

                    b.HasIndex("CitizenID");

                    b.ToTable("Documents");

                    b
                        .HasAnnotation("MySQL:Collation", "latin5_turkish_ci");
                });

            modelBuilder.Entity("DocumentMono.DataAccess.FlowStep", b =>
                {
                    b.Property<int>("UserID")
                        .HasColumnType("int");

                    b.Property<int>("DocumentID")
                        .HasColumnType("int");

                    b.Property<DateTime?>("AnsverDate")
                        .HasColumnType("datetime");

                    b.Property<int>("FlowStatus")
                        .HasColumnType("int");

                    b.HasKey("UserID", "DocumentID");

                    b.ToTable("FlowSteps");
                });

            modelBuilder.Entity("DocumentMono.DataAccess.User", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ID");

                    b.ToTable("Users");

                    b
                        .HasAnnotation("MySQL:Collation", "latin5_turkish_ci");
                });

            modelBuilder.Entity("DocumentMono.DataAccess.CivilServant", b =>
                {
                    b.HasOne("DocumentMono.DataAccess.User", "User")
                        .WithMany()
                        .HasForeignKey("UserID");

                    b.Navigation("User");
                });

            modelBuilder.Entity("DocumentMono.DataAccess.Document", b =>
                {
                    b.HasOne("DocumentMono.DataAccess.Citizen", "Citizen")
                        .WithMany("Documents")
                        .HasForeignKey("CitizenID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Citizen");
                });

            modelBuilder.Entity("DocumentMono.DataAccess.Citizen", b =>
                {
                    b.Navigation("Documents");
                });
#pragma warning restore 612, 618
        }
    }
}
